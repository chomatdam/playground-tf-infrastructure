version: '3.7'
services:
  zookeeper1:
    image: confluentinc/cp-zookeeper
    restart: always
    hostname: zookeeper1
    container_name: zookeeper1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVER_1: zookeeper1
      ZOOKEEPER_SERVER_2: zookeeper2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_OPTS:
        -Djava.security.auth.login.config=/etc/zk/secrets/jaas_zk.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -DrequireClientAuthScheme=sasl
        -Dquorum.auth.enableSasl=true
        -Dquorum.auth.learnerRequireSasl=true
        -Dquorum.auth.serverRequireSasl=true
        -Dquorum.auth.learner.loginContext=QuorumLearner
        -Dquorum.auth.server.loginContext=QuorumServer
        -Dquorum.cnxn.threads.size=20
      KAFKA_JMX_PORT: 39999
      KAFKA_JMX_HOSTNAME: zookeeper1
      KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false'
    volumes:
      - ${PWD}/security/zk:/etc/zk/secrets
    expose:
      - 2181

  zookeeper2:
    image: confluentinc/cp-zookeeper
    restart: always
    hostname: zookeeper2
    container_name: zookeeper2
    environment:
      ZOOKEEPER_SERVER_1: zookeeper1
      ZOOKEEPER_SERVER_2: zookeeper2
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_OPTS:
        -Djava.security.auth.login.config=/etc/zk/secrets/jaas_zk.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -DrequireClientAuthScheme=sasl
        -Dquorum.auth.enableSasl=true
        -Dquorum.auth.learnerRequireSasl=true
        -Dquorum.auth.serverRequireSasl=true
        -Dquorum.auth.learner.loginContext=QuorumLearner
        -Dquorum.auth.server.loginContext=QuorumServer
        -Dquorum.cnxn.threads.size=20
      KAFKA_JMX_PORT: 39999
      KAFKA_JMX_HOSTNAME: zookeeper2
      KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false'
    volumes:
      - ${PWD}/security/zk:/etc/zk/secrets
    expose:
      - 2181

#  kafka1:
#    image: confluentinc/cp-enterprise-kafka
#    restart: always
#    hostname: kafka1
#    container_name: kafka1
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_CREATE_TOPICS: 'topic1:1:1'
#      KAFKA_BROKER_ID: 1
#      KAFKA_BROKER_RACK: "r1"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#
#      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094               # listening on all interfaces
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://kafka1:9094      # INTERNAL://private-ip:29092  EXTERNAL://public-ip:9092
#
#      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.auth.SimpleAclAuthorizer
#      KAFKA_SUPER_USERS: User:client;User:schemaregistry;User:restproxy;User:broker;User:connect;User:ANONYMOUS
#
#      KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-512
#      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: SCRAM-SHA-512
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_SSL
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#
#      KAFKA_OPTS:
#        -Djava.security.auth.login.config=/etc/kafka/secrets/jaas_kafka.conf
#      KAFKA_HEAP_OPTS: -Xmx1G -Xms1G
#      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
#      KAFKA_CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
#
#      KAFKA_SSL_CLIENT_AUTH: required
#      KAFKA_SSL_KEYSTORE_LOCATION: /var/private/ssl/kafka.kafka1.keystore.jks
#      KAFKA_SSL_KEYSTORE_PASSWORD: confluent # this could be moved to secrets and call `cat /run/secrets/secretName`
#      KAFKA_SSL_KEY_PASSWORD: confluent
#      KAFKA_SSL_TRUSTSTORE_LOCATION: /var/private/ssl/kafka.kafka1.truststore.jks
#      KAFKA_SSL_TRUSTSTORE_PASSWORD: confluent
#
#      KAFKA_JMX_PORT: 39999
#      KAFKA_JMX_HOSTNAME: kafka1
#
#      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092
#      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
#      CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: SCRAM-SHA-512
#      CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
#        username=\"client\" \
#        password=\"client-secret\";"
#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1 #if less than 3 brokers
#      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: "false"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    volumes:
#      - ${PWD}/security/certs:/var/private/ssl
#      - ${PWD}/security/kafka:/etc/kafka/secrets
#    ports:
#      - 9092:9092
#      - 9094:9094
#
#  control-center:
#    depends_on:
#      - kafka1
#      - schemaregistry
#    container_name: control-center
#    restart: always
#    image: confluentinc/cp-enterprise-control-center
#    environment:
#      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "https://schemaregistry:8085"
#      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
#      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka1:9094
#      CONTROL_CENTER_REPLICATION_FACTOR: 1
#      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_SSL
#      CONTROL_CENTER_STREAMS_SASL_MECHANISM: SCRAM-SHA-512
#      CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
#        username=\"client\" \
#        password=\"client-secret\";"
#
#      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_LOCATION: /etc/kafka/ssl/kafka.control-center.truststore.jks
#      CONTROL_CENTER_STREAMS_SSL_TRUSTSTORE_PASSWORD: confluent
#      CONTROL_CENTER_STREAMS_SSL_KEYSTORE_LOCATION: /etc/kafka/ssl/kafka.control-center.keystore.jks
#      CONTROL_CENTER_STREAMS_SSL_KEYSTORE_PASSWORD: confluent
#      CONTROL_CENTER_STREAMS_SSL_KEY_PASSWORD: confluent
#      CONTROL_CENTER_STREAMS_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
#      # HTTP and HTTPS to Control Center UI
#      CONTROL_CENTER_REST_LISTENERS: "https://0.0.0.0:9021"
#      CONTROL_CENTER_REST_SSL_TRUSTSTORE_LOCATION: /etc/kafka/ssl/kafka.control-center.truststore.jks
#      CONTROL_CENTER_REST_SSL_TRUSTSTORE_PASSWORD: confluent
#      CONTROL_CENTER_REST_SSL_KEYSTORE_LOCATION: /etc/kafka/ssl/kafka.control-center.keystore.jks
#      CONTROL_CENTER_REST_SSL_KEYSTORE_PASSWORD: confluent
#      CONTROL_CENTER_REST_SSL_KEY_PASSWORD: confluent
#      CONTROL_CENTER_OPTS: -Djavax.net.ssl.trustStore=/etc/kafka/ssl/kafka.control-center.truststore.jks
#        -Djavax.net.ssl.trustStorePassword=confluent
#        -Djavax.net.ssl.keyStore=/etc/kafka/ssl/kafka.control-center.keystore.jks
#        -Djavax.net.ssl.keyStorePassword=confluent
#    volumes:
#      - ${PWD}/security/certs:/etc/kafka/ssl
#      - ${PWD}/security/control-center:/etc/kafka/secrets
#    ports:
#      - 9021:9021
#
#  schemaregistry:
#    image: confluentinc/cp-schema-registry
#    container_name: schemaregistry
#    restart: always
#    depends_on:
#      - zookeeper
#      - kafka1
#    volumes:
#      - $PWD/security/certs:/etc/kafka/secrets
#    environment:
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "SASL_SSL://kafka1:9094"
#      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
#      SCHEMA_REGISTRY_LISTENERS: "https://0.0.0.0:8085"
#      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_SSL
#      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
#        username=\"schemaregistry\" \
#        password=\"schemaregistry-secret\";"
#      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: SCRAM-SHA-512
#      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.schemaregistry.truststore.jks
#      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: confluent
#      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.schemaregistry.keystore.jks
#      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: confluent
#      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: confluent
#      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "HTTPS"
#      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.schemaregistry.truststore.jks
#      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: confluent
#      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.schemaregistry.keystore.jks
#      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: confluent
#      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: confluent
#
#      SCHEMA_REGISTRY_SSL_CLIENT_AUTH: "false"
#      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "https"
#      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
#    ports:
#      - 8085:8085
#    expose:
#      - 8085
#
#  kafka-connect:
#    image: confluentinc/cp-kafka-connect:5.2.1
#    restart: always
#    container_name: kafka-connect
#    hostname: kafka-connect
#    depends_on:
#      - zookeeper
#      - kafka1
#      - schemaregistry
#      - restproxy
#    ports:
#      - 8083:8083
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: "kafka1:9094"
#      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
#      CONNECT_REST_PORT: 8083
#
#      CONNECT_GROUP_ID: compose-connect-group
#      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
#      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
#      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
#      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
#      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'https://schemaregistry:8085'
#      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
#      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'https://schemaregistry:8085'
#      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka/connectors'
#
#      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
#
#      CONNECT_SECURITY_PROTOCOL: SASL_SSL
#      CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
#      username=\"connect\" \
#      password=\"connect-secret\";"
#      CONNECT_SASL_MECHANISM: SCRAM-SHA-512
#      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.truststore.jks
#      CONNECT_SSL_TRUSTSTORE_PASSWORD: confluent
#      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.keystore.jks
#      CONNECT_SSL_KEYSTORE_PASSWORD: confluent
#
#      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
#      CONNECT_PRODUCER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
#        username=\"connect\" \
#        password=\"connect-secret\";"
#      CONNECT_PRODUCER_SASL_MECHANISM: SCRAM-SHA-512
#      CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.truststore.jks
#      CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD: confluent
#      CONNECT_PRODUCER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.keystore.jks
#      CONNECT_PRODUCER_SSL_KEYSTORE_PASSWORD: confluent
#      CONNECT_PRODUCER_SSL_KEY_PASSWORD: confluent
#      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
#      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL
#      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
#        username=\"connect\" \
#        password=\"connect-secret\";"
#      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: SCRAM-SHA-512
#      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.truststore.jks
#      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_PASSWORD: confluent
#      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.keystore.jks
#      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_PASSWORD: confluent
#      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEY_PASSWORD: confluent
#
#      # Connect consumer
#      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
#      CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
#        username=\"connect\" \
#        password=\"connect-secret\";"
#      CONNECT_CONSUMER_SASL_MECHANISM: SCRAM-SHA-512
#      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.truststore.jks
#      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: confluent
#      CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.keystore.jks
#      CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD: confluent
#      CONNECT_CONSUMER_SSL_KEY_PASSWORD: confluent
#
#      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
#      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL
#      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
#        username=\"connect\" \
#        password=\"connect-secret\";"
#      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: SCRAM-SHA-512
#      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.truststore.jks
#      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_TRUSTSTORE_PASSWORD: confluent
#      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.connect.keystore.jks
#      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEYSTORE_PASSWORD: confluent
#      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SSL_KEY_PASSWORD: confluent
#
#      # Required for Schema Registry HTTPS
#      KAFKA_OPTS:
#        -Djavax.net.debug=all
#        -Djavax.net.ssl.trustStore=/etc/kafka/secrets/kafka.connect.truststore.jks
#        -Djavax.net.ssl.trustStorePassword=confluent
#        -Djavax.net.ssl.keyStore=/etc/kafka/secrets/kafka.connect.keystore.jks
#        -Djavax.net.ssl.keyStorePassword=confluent
#      SCHEMA_REGISTRY_OPTS:
#        -Djavax.net.debug=all
#        -Djavax.net.ssl.trustStore=/etc/kafka/secrets/kafka.client.truststore.jks
#        -Djavax.net.ssl.trustStorePassword=confluent
#        -Djavax.net.ssl.keyStore=/etc/kafka/secrets/kafka.client.keystore.jks
#        -Djavax.net.ssl.keyStorePassword=confluent
#
#      CONNECT_LOG4J_ROOT_LOGLEVEL: 'VERBOSE'
#      CONNECT_LOG4J_LOGGERS: 'org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR'
#
#      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.2.1.jar
#    volumes:
#      - ${PWD}/connectors:/etc/kafka/connectors
#      - ${PWD}/security/certs:/etc/kafka/secrets
#
#  restproxy:
#    image: confluentinc/cp-kafka-rest:5.2.1
#    restart: always
#    depends_on:
#      - zookeeper
#      - kafka1
#      - schemaregistry
#    hostname: restproxy
#    container_name: restproxy
#    volumes:
#      - $PWD/security/certs:/etc/kafka/ssl
#    environment:
#      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka1:9094"
#      KAFKA_REST_LOG4J_ROT_LOGLEVEL: VERBOSE
#
#      KAFKA_REST_LISTENERS: "https://0.0.0.0:8086"
#      KAFKA_REST_HOST_NAME: restproxy
#      KAFKA_REST_SSL_TRUSTSTORE_LOCATION: /etc/kafka/ssl/kafka.restproxy.truststore.jks
#      KAFKA_REST_SSL_TRUSTSTORE_PASSWORD: confluent
#      KAFKA_REST_SSL_KEYSTORE_LOCATION: /etc/kafka/ssl/kafka.restproxy.keystore.jks
#      KAFKA_REST_SSL_KEYSTORE_PASSWORD: confluent
#      KAFKA_REST_SSL_KEY_PASSWORD: confluent
#      KAFKA_REST_SSL_CLIENT_AUTH: "false"
#
#      KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SASL_SSL
#      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/ssl/kafka.restproxy.truststore.jks
#      KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD: confluent
#      KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION: /etc/kafka/ssl/kafka.restproxy.keystore.jks
#      KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD: confluent
#      KAFKA_REST_CLIENT_SSL_KEY_PASSWORD: confluent
#      KAFKA_REST_CLIENT_SASL_MECHANISM: SCRAM-SHA-512
#      KAFKA_REST_CLIENT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
#              username=\"client\" \
#              password=\"client-secret\";"
#      KAFKAREST_OPTS:
#        -Djavax.net.ssl.trustStore=/etc/kafka/ssl/kafka.client.truststore.jks
#        -Djavax.net.ssl.trustStorePassword=confluent
#        -Djavax.net.ssl.keyStore=/etc/kafka/ssl/kafka.client.keystore.jks
#        -Djavax.net.ssl.keyStorePassword=confluent
#
#      KAFKA_REST_SCHEMA_REGISTRY_URL: "https://schemaregistry:8085"
#      SCHEMA_REGISTRY_OPTS:
#        -Djavax.net.ssl.trustStore=/etc/kafka/ssl/kafka.client.truststore.jks
#        -Djavax.net.ssl.trustStorePassword=confluent
#        -Djavax.net.ssl.keyStore=/etc/kafka/ssl/kafka.client.keystore.jks
#        -Djavax.net.ssl.keyStorePassword=confluent
#    ports:
#      - 8086:8086